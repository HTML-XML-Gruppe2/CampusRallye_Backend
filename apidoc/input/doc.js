/** @api {get} /api/object/:id Get Object by ID
 * @apiName GetObject
 * @apiGroup Object
 * 
 * @apiDescription
 * Retrieve all information regarding a specific object using its ID
 * @apiParam {Number} id unique ID of the object
 *
 * @apiSuccess {Object} object requested object
 * 
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *   {
*    "_id": "5b9795476bde7b20ec51c757",
*    "name": "Testort",
*    "description": "Testbeschreibung",
*    "position": {
*        "x": 1,
*        "y": 1.2
*    },
*    "questions": [
*        {
*            "text": "Frage1",
*            "answers": [
*                {
*                    "text": "Antwort1",
*                    "correct": false
*                },
*                {
*                    "text": "Antwort2",
*                    "correct": false
*                },
*                {
*                    "text": "Antwort3",
*                    "correct": true
*                }
*            ]
*        },
*        {
*            "text": "Frage 2",
*            "answers": [
*                {
*                    "text": "Antwort1",
*                    "correct": false
*                },
*                {
*                    "text": "Antwort2",
*                    "correct": true
*                }
*            ]
*        }
*    ]
*}    
 *
 * @apiError ObjectNotFound An object with the id was not found
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "object not found"
 *      }
 * 
 * 
 * @apiError InvalidObjectId the object id did not match the pattern
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "Argument passed in must be a single String of 12 bytes or a string of 24 hex characters"
 *      }
 * 
 */

/** @api {post} /api/objects/ Create new Object
 * @apiName CreateObject
 * @apiGroup Object
 *
 * @apiDescription 
 * Creates a new Object.
 * the Id of the object is generated by the database and returned on success
 * 
 * @apiParam {Object} Object that should be created 
 * @apiParamExample {json} Request-Example:
 *     {
 *
*    "name": "Testort",
*    "description": "Testbeschreibung",
*    "position": {
*        "x": 1,
*        "y": 1.2
*    },
*    "questions": [
*        {
*            "text": "Frage1",
*            "answers": [
*                {
*                    "text": "Antwort1",
*                    "correct": false
*                },
*                {
*                    "text": "Antwort2",
*                    "correct": false
*                },
*                {
*                    "text": "Antwort3",
*                    "correct": true
*                }
*            ]
*        },
*        {
*            "text": "Frage 2",
*            "answers": [
*                {
*                    "text": "Antwort1",
*                    "correct": false
*                },
*                {
*                    "text": "Antwort2",
*                    "correct": true
*                }
*            ]
*        }
*    ]
*}    
 *     
 *
 * @apiSuccess {String} ObjectId of the created object
 * 
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *{
 *   "objectId": "5b97a079fa21e70964321125"
 *}
 *
 * @apiError CreationError Object could not be created
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 400 Bad Request
 *  {
 *       "error": "object has no name"
 *   }
 */

/** @api {get} /api/objects/basic Get all Object basics
 * @apiName GetPositions
 * @apiGroup Object
 *
 * @apiSuccess {Array} Array  array of objects containing object id, name, description and position
 * 
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *[
*    {
*        "_id": "5b97997fa10d9012382a0ecd",
*        "name": "Testort",
*        "description": "Testbeschreibung",
*        "position": {
*            "x": 1,
*            "y": 1.2
*        }
*    },
*    {
*        "_id": "5b979d413633cd18dc5f8751",
*        "name": "Testort2",
*        "description": "Testbeschreibung2",
*        "position": {
*            "x": 1,
*            "y": 1.2
*        }
*    }
*]    
 *
 * @apiError ObjectsNotFound No object was found
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "No object was found"
 *      }
 */

 /** @api {delete} /api/object/:id Delete Object by ID
 * @apiName DeleteObject
 * @apiGroup Object
 * 
 * @apiDescription
 * Delete an object using its unique id
 * @apiParam {Number} id unique ID of the object
 *
 * @apiSuccess {empty} empty the response body is empty
 * 
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 * 
 * 
 * @apiError ObjectNotFound An object with the id was not found
 * 
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "object not found"
 *      }
 * 
 * 
 * @apiError InvalidObjectId the object id did not match the pattern
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "Argument passed in must be a single String of 12 bytes or a string of 24 hex characters"
 *      }
 *
 *   
*/

 /** @api {get} /api/scores Get whole score-list
 * @apiName GetScores
 * @apiGroup Score
 * 
 * @apiDescription
 * Get all Scores
 *
 * @apiSuccess {Array} Array array containing the scores
 * 
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *[
*    {
*        "_id": "5b991b5c4da7670d7c7b7df8",
*        "name": "Person 1",
*        "score": 10
*    },
*    {
*        "_id": "5b991b614da7670d7c7b7df9",
*        "name": "Person 2",
*        "score": 12
*    },
*    {
*        "_id": "5b991b684da7670d7c7b7dfa",
*        "name": "Person 3",
*        "score": 8
*    }
*]
 * 
 * 
 * @apiError ScoresNotFound No score was found
 * 
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "No score found"
 *      }
 *  
*/


/** @api {post} /api/scores/ Create new Score
 * @apiName CreateScore
 * @apiGroup Score
 *
 * @apiDescription 
 * Creates a new Score. An Id for the Score is generated by the database and returned on success
 * 
 * @apiParam {Object} Object that should be created 
 * @apiParamExample {json} Request-Example:    
 * 
 *  {
 *	"name":"Max Mustermann",
 *	"score": 8
 *  }
 *
 * @apiSuccess {String} ObjectId of the created object
 * 
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *{
 *   "scoreId": "5b97a079fa21e70964321125"
 *}
 *
 * @apiError CreationError Score could not be created
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 400 Bad Request
 *  {
 *       "error": "score has no name"
 *   }
 */


 /** @api {delete} /api/score/:id Delete Score by ID
 * @apiName DeleteScore
 * @apiGroup Score
 * 
 * @apiDescription
 * Delete a score using its unique id
 * @apiParam {Number} id unique ID of the score
 *
 * @apiSuccess {empty} empty the response body is empty
 * 
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 * 
 * 
 * @apiError ObjectNotFound An object with the id was not found
 * 
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "score not found"
 *      }
 * 
 * 
 * @apiError InvalidScoreId the score id did not match the pattern
 *
 * @apiErrorExample Error-Response:
 *     HTTP/1.1 404 Not Found
 *      {
 *         "error": "Argument passed in must be a single String of 12 bytes or a string of 24 hex characters"
 *      }
 *
 *   
*/